{"version":3,"sources":["webpack:///./src/pages/appco-foss.js","webpack:///./src/components/app.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_app__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","AppCo","_ref","data","a","createElement","allApps","totalCount","numberFormat","format","edges","reduce","sum","node","lifetimeEarnings","map","idx","key","Intl","NumberFormat","style","currency","commitFormat","DateTimeFormat","year","month","App","hideRewards","hideDetailsLink","earnings","lastUpdate","openSourceUrl","lastCommitDate","Date","parse","fields","lastCommit","isNaN","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","href","appcoid","name","website","length"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAqBaI,EAAK,aAoBHM,UAnCD,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACb,OAAON,EAAAO,EAAAC,cAACL,EAAA,EAAD,KACPH,EAAAO,EAAAC,cAAA,6CACAR,EAAAO,EAAAC,cAAA,UACER,EAAAO,EAAAC,cAAA,2BAAmBF,EAAKG,QAAQC,YAChCV,EAAAO,EAAAC,cAAA,4BAAoBG,IAAaC,OAAON,EAAKG,QAAQI,MAAMC,OAAO,SAACC,EAAKlB,GAAN,OAAYkB,EAAMlB,EAAEmB,KAAKC,kBAAiB,MAE9GjB,EAAAO,EAAAC,cAAA,UACGF,EAAKG,QAAQI,MAAMK,IAAI,SAASrB,EAAGsB,GACjC,OAAQnB,EAAAO,EAAAC,cAAA,MAAIY,IAAKD,GAAKnB,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAKI,KAAMT,EAAEmB,yGCZ/BL,EAAe,IAAIU,KAAKC,aAAa,QAAS,CACzDC,MAAO,WACPC,SAAU,QAECC,EAAe,IAAIJ,KAAKK,eAAe,QAAS,CAC3DC,KAAM,UACNC,MAAO,SAyDMC,IAvDH,SAAAxB,GAA4C,IAAzCC,EAAyCD,EAAzCC,KAAMwB,EAAmCzB,EAAnCyB,YAAaC,EAAsB1B,EAAtB0B,gBAC1BC,EAAWrB,EAAaC,OAAON,EAAKW,kBACtCgB,EAAa,GACjB,GAAI3B,EAAK4B,cAAe,CACtB,IAAMC,EAAiBC,KAAKC,MAAM/B,EAAKgC,OAAOC,YAE5CN,EADEO,MAAML,GACK7B,EAAKgC,OAAOC,WAEZd,EAAab,OAAOuB,GAIrC,OACEM,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAmC,SAAA,MACIX,GAAmBU,EAAAlC,EAAAC,cAAA,KAAGmC,KAAI,UAAYrC,EAAKsC,SAAYtC,EAAKuC,MAC7Dd,GAAmBU,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAmC,SAAA,KAAGpC,EAAKuC,MAC3BvC,EAAK4B,eACJO,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAmC,SAAA,KACG,IADH,IAEGD,EAAAlC,EAAAC,cAAA,KAAGmC,KAAMrC,EAAK4B,eAAgB5B,EAAK4B,eAFtC,MAKAJ,GACAW,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAmC,SAAA,KACED,EAAAlC,EAAAC,cAAA,WADF,YAEYwB,EAAU,KAGvB1B,EAAK4B,eACJO,EAAAlC,EAAAC,cAAAiC,EAAAlC,EAAAmC,SAAA,KACED,EAAAlC,EAAAC,cAAA,WADF,gBAEgByB,GAGlBQ,EAAAlC,EAAAC,cAAA,WACCF,EAAKwC,SAAWxC,EAAKwC,QAAQC,OAAS,GACrCN,EAAAlC,EAAAC,cAAA,KAAGmC,KAAMrC,EAAKwC,SAAd","file":"component---src-pages-appco-foss-js-3cd9ab07ded5f5248e74.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport App from \"../components/app\";\nimport Layout from \"../components/layout\";\nimport {numberFormat} from \"../components/app\"\n\nconst AppCo = ({ data }) => {\n    return <Layout>\n    <h1>All Open Source Blockstack Apps</h1>\n    <ul>\n      <li>Total number: {data.allApps.totalCount}</li>\n      <li>Total rewards: {numberFormat.format(data.allApps.edges.reduce((sum, d) => sum + d.node.lifetimeEarnings,0))}</li>\n    </ul>\n    <ul>\n      {data.allApps.edges.map(function(d, idx){\n         return (<li key={idx}><App data={d.node}/></li>)\n       })}\n    </ul>\n    </Layout>;\n};\n\nexport const query = graphql`\n    query foss {\n        allApps(filter:{openSourceUrl:{nin:[\"\", null, \n        \"https://github.com/zincwork/contracts\", \"https://github.com/kkomaz/debut\",\n        \"https://github.com/springrole\", \"https://github.com/dmailonline\", \"https://github.com/blockcred\",\n        \"https://github.com/blackholeorganization\", \"https://github.com/danparamov/mila-crm\",\n        \"https://github.com/KevinNTH\"\n      ]},\n         miningReady:{eq:true}}, sort:{fields:[fields___lastCommit, name], order:[DESC, ASC]}) {\n          totalCount\n          edges {\n            node {\n                  ...AppInformation\n                }\n              }\n            }\n          }\n`;\n\n\nexport default AppCo;\n\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nexport const numberFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n})\nexport const commitFormat = new Intl.DateTimeFormat('en-US', {\n  year: 'numeric',\n  month: 'long',\n})\nconst App = ({ data, hideRewards, hideDetailsLink }) => {\n  const earnings = numberFormat.format(data.lifetimeEarnings)\n  var lastUpdate = ''\n  if (data.openSourceUrl) {\n    const lastCommitDate = Date.parse(data.fields.lastCommit)\n    if (isNaN(lastCommitDate)) {\n      lastUpdate = data.fields.lastCommit\n    } else {\n      lastUpdate = commitFormat.format(lastCommitDate)\n    }\n  }\n\n  return (\n    <>\n      {!hideDetailsLink && <a href={`/appco/${data.appcoid}`}>{data.name}</a>}\n      {hideDetailsLink && <>{data.name}</>}\n      {data.openSourceUrl && (\n        <>\n          {' '}\n          (<a href={data.openSourceUrl}>{data.openSourceUrl}</a>)\n        </>\n      )}\n      {!hideRewards && (\n        <>\n          <br />\n          rewards: {earnings}{' '}\n        </>\n      )}\n      {data.openSourceUrl && (\n        <>\n          <br />\n          last update: {lastUpdate}\n        </>\n      )}\n      <br />\n      {data.website && data.website.length > 0 && (\n        <a href={data.website}>Launch app</a>\n      )}\n    </>\n  )\n}\n\nexport const query = graphql`\n  fragment AppInformation on apps {\n    appcoid: id__normalized\n    name\n    website\n    lifetimeEarnings\n    openSourceUrl\n    fields {\n      lastCommit\n    }\n  }\n`\n\nexport default App\n"],"sourceRoot":""}