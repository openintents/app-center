{"version":3,"sources":["webpack:///./src/pages/comment-thanks.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","CommentThanks","a","createElement","hideSearch","title","spacing","variant","SEO","_ref","description","lang","meta","keywords","siteMetaData","useSiteMetaData","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","_public_static_d_1582510487_json__WEBPACK_IMPORTED_MODULE_0__","data","site","siteMetadata"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,MAAAS,EAAAT,EAAA,KAkBeU,UAZO,kBACpBN,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAQO,YAAU,GAChBT,EAAAO,EAAAC,cAACL,EAAA,EAAD,CAAKO,MAAM,kBACXV,EAAAO,EAAAC,cAACJ,EAAA,EAAD,CAAWO,QAAS,GAClBX,EAAAO,EAAAC,cAACH,EAAA,EAAD,CAAYO,QAAQ,MAApB,gCAGAZ,EAAAO,EAAAC,cAACH,EAAA,EAAD,kJCRN,SAASQ,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUR,EAASI,EAATJ,MAC1CS,EAAeC,IACfC,EAAkBN,GAAeI,EAAaJ,YACpD,OACEO,EAAAf,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,eAAgB,CACdR,QAEFN,MAAOA,EACPe,cAAa,QAAUN,EAAaT,MACpCO,KAAM,CACJ,CACES,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASjB,GAEX,CACEkB,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAaU,QAExB,CACEH,KAAI,gBACJC,QAASjB,GAEX,CACEgB,KAAI,sBACJC,QAASN,IAGVS,OACCZ,EAASa,OAAS,EACd,CACEL,KAAI,WACJC,QAAST,EAASc,KAAT,OAEX,IAELF,OAAOb,KAKhBJ,EAAIoB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZL,EAAIqB,UAAY,CACdnB,YAAaoB,IAAUC,OACvBpB,KAAMmB,IAAUC,OAChBnB,KAAMkB,IAAUE,MAChBnB,SAAUiB,IAAUG,QAAQH,IAAUC,QACtC1B,MAAOyB,IAAUC,OAAOG,YAGX1B,MAEf,IAAMO,EAAkB,WAYtB,OAZ4BoB,EAAAC,KACpBC,KAWIC","file":"component---src-pages-comment-thanks-js-23566739f9fe56b149f5.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { Container, Typography } from '@material-ui/core'\n\nconst CommentThanks = () => (\n  <Layout hideSearch>\n    <SEO title=\"OI App Center\" />\n    <Container spacing={2}>    \n      <Typography variant=\"h4\">\n        You can close this page now.\n      </Typography>\n      <Typography>Thank you for visiting OI App Center!</Typography>\n    </Container>\n  </Layout>\n)\n\nexport default CommentThanks\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const siteMetaData = useSiteMetaData()\n  const metaDescription = description || siteMetaData.description\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${siteMetaData.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: siteMetaData.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst useSiteMetaData = () => {\n  const { site } = useStaticQuery(graphql`\n    query DefaultSEOQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `)\n  return site.siteMetadata\n}\n"],"sourceRoot":""}