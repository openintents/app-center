{"version":3,"sources":["webpack:///./src/pages/appco-foss.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/app.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_app__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","AppCo","_ref","data","a","createElement","allApps","totalCount","numberFormat","format","edges","reduce","sum","node","lifetimeEarnings","map","idx","key","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_755544856","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","Intl","NumberFormat","currency","commitFormat","DateTimeFormat","year","month","App","hideRewards","hideDetailsLink","earnings","lastUpdate","openSourceUrl","lastCommitDate","parse","fields","lastCommit","isNaN","react__WEBPACK_IMPORTED_MODULE_1___default","appcoid","name","website","length"],"mappings":"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","file":"component---src-pages-appco-foss-js-e7ea04f1ff2b9922e19f.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport App from \"../components/app\";\nimport Layout from \"../components/layout\";\nimport {numberFormat} from \"../components/app\"\n\nconst AppCo = ({ data }) => {\n    return <Layout>\n    <h1>All Open Source Blockstack Apps</h1>\n    <ul>\n      <li>Total number: {data.allApps.totalCount}</li>\n      <li>Total rewards: {numberFormat.format(data.allApps.edges.reduce((sum, d) => sum + d.node.lifetimeEarnings,0))}</li>\n    </ul>\n    <ul>\n      {data.allApps.edges.map(function(d, idx){\n         return (<li key={idx}><App data={d.node}/></li>)\n       })}\n    </ul>\n    </Layout>;\n};\n\nexport const query = graphql`\n    query foss {\n        allApps(filter:{openSourceUrl:{nin:[\"\", null, \n        \"https://github.com/zincwork/contracts\", \"https://github.com/kkomaz/debut\",\n        \"https://github.com/springrole\", \"https://github.com/dmailonline\", \"https://github.com/blockcred\",\n        \"https://github.com/blackholeorganization\", \"https://github.com/danparamov/mila-crm\"\n      ]},\n         miningReady:{eq:true}}, sort:{fields:[fields___lastCommit, name], order:[DESC, ASC]}) {\n          totalCount\n          edges {\n            node {\n                  ...AppInformation\n                }\n              }\n            }\n          }\n`;\n\n\nexport default AppCo;\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `#5DBCD2`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a> and{' '}\n            <a href=\"https://blockstack.org\">Blockstack</a>.\n              {' '}You can{' '}\n              <a href=\"https://gitlab.com/friedger/app-center\">\n                view the source here\n              </a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nexport const numberFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n})\nexport const commitFormat = new Intl.DateTimeFormat('en-US', {\n  year: 'numeric',\n  month: 'long',\n})\nconst App = ({ data, hideRewards, hideDetailsLink }) => {\n  const earnings = numberFormat.format(data.lifetimeEarnings)\n  var lastUpdate = ''\n  if (data.openSourceUrl) {\n    const lastCommitDate = Date.parse(data.fields.lastCommit)\n    if (isNaN(lastCommitDate)) {\n      lastUpdate = data.fields.lastCommit\n    } else {\n      lastUpdate = commitFormat.format(lastCommitDate)\n    }\n  }\n\n  return (\n    <>\n      {!hideDetailsLink && <a href={`/appco/${data.appcoid}`}>{data.name}</a>}\n      {hideDetailsLink && <>{data.name}</>}\n      {data.openSourceUrl && (\n        <>\n          {' '}\n          (<a href={data.openSourceUrl}>{data.openSourceUrl}</a>)\n        </>\n      )}\n      {!hideRewards && (\n        <>\n          <br />\n          rewards: {earnings}{' '}\n        </>\n      )}\n      {data.openSourceUrl && (\n        <>\n          <br />\n          last update: {lastUpdate}\n        </>\n      )}\n      <br />\n      {data.website && data.website.length > 0 && (\n        <a href={data.website}>Launch app</a>\n      )}\n    </>\n  )\n}\n\nexport const query = graphql`\n  fragment AppInformation on apps {\n    appcoid: id__normalized\n    name\n    website\n    lifetimeEarnings\n    openSourceUrl\n    fields {\n      lastCommit\n    }\n  }\n`\n\nexport default App\n"],"sourceRoot":""}