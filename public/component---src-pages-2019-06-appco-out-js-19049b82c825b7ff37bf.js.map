{"version":3,"sources":["webpack:///./src/pages/2019-06/appco-out.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/app.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_app__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","AppCo","_ref","data","retiredApps","lastmonth","edges","filter","thismonth","e","node","appcoid","length","map","idx","a","createElement","key","hideRewards","hideDetailsLink","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_755544856","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","numberFormat","Intl","NumberFormat","currency","commitFormat","DateTimeFormat","year","month","App","earnings","format","lifetimeEarnings","lastUpdate","openSourceUrl","lastCommitDate","parse","fields","lastCommit","isNaN","react__WEBPACK_IMPORTED_MODULE_1___default","name","website"],"mappings":"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","file":"component---src-pages-2019-06-appco-out-js-19049b82c825b7ff37bf.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport App from '../../components/app'\nimport Layout from '../../components/layout'\n\nconst AppCo = ({ data }) => {\n  const retiredApps = data.lastmonth.edges\n    .filter(function(d) {\n      const appcodata = data.thismonth.edges.filter(\n        e => e.node.appcoid === d.node.appcoid\n      )\n      return appcodata.length === 0\n    })\n    .map((d, idx) => {\n      return (\n        <li key={idx}>\n          <App data={d.node} hideRewards hideDetailsLink/>\n        </li>\n      )\n    })\n\n  return (\n    <Layout>\n      <h1>Retired Blockstack Apps (June 2019)</h1>\n      <ul>\n        <li>Total number: {retiredApps.length}</li>\n      </ul>\n      <ul>{retiredApps}</ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query out201906 {\n    lastmonth:allAppminingresultsXlsxMay2019 {\n      totalCount\n      edges {\n        node {\n          appcoid: App_Id\n          name: App_Name\n          Final_Score\n        }\n      }\n    }\n    thismonth:allAppminingresultsXlsxJune2019 (\n      filter: { Final_Score: {ne: null} }\n      ){\n      edges {\n        node {\n          appcoid: App_Id\n          name: App_Name\n          Final_Score\n        }\n      }\n    }\n  }\n`\n\nexport default AppCo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `#5DBCD2`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a> and{' '}\n            <a href=\"https://blockstack.org\">Blockstack</a>.\n              {' '}You can{' '}\n              <a href=\"https://gitlab.com/friedger/app-center\">\n                view the source here\n              </a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nexport const numberFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n})\nexport const commitFormat = new Intl.DateTimeFormat('en-US', {\n  year: 'numeric',\n  month: 'long',\n})\nconst App = ({ data, hideRewards, hideDetailsLink }) => {\n  const earnings = numberFormat.format(data.lifetimeEarnings)\n  var lastUpdate = ''\n  if (data.openSourceUrl) {\n    const lastCommitDate = Date.parse(data.fields.lastCommit)\n    if (isNaN(lastCommitDate)) {\n      lastUpdate = data.fields.lastCommit\n    } else {\n      lastUpdate = commitFormat.format(lastCommitDate)\n    }\n  }\n\n  return (\n    <>\n      {!hideDetailsLink && <a href={`/appco/${data.appcoid}`}>{data.name}</a>}\n      {hideDetailsLink && <>{data.name}</>}\n      {data.openSourceUrl && (\n        <>\n          {' '}\n          (<a href={data.openSourceUrl}>{data.openSourceUrl}</a>)\n        </>\n      )}\n      {!hideRewards && (\n        <>\n          <br />\n          rewards: {earnings}{' '}\n        </>\n      )}\n      {data.openSourceUrl && (\n        <>\n          <br />\n          last update: {lastUpdate}\n        </>\n      )}\n      <br />\n      {data.website && data.website.length > 0 && (\n        <a href={data.website}>Launch app</a>\n      )}\n    </>\n  )\n}\n\nexport const query = graphql`\n  fragment AppInformation on apps {\n    appcoid: id__normalized\n    name\n    website\n    lifetimeEarnings\n    openSourceUrl\n    fields {\n      lastCommit\n    }\n  }\n`\n\nexport default App\n"],"sourceRoot":""}