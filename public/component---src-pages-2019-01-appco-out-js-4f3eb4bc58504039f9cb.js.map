{"version":3,"sources":["webpack:///./src/pages/2019-01/appco-out.js","webpack:///./src/components/app.js"],"names":["query","AppCo","_ref","data","retiredApps","lastmonth","edges","filter","d","thismonth","e","node","name","length","map","idx","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","_components_app__WEBPACK_IMPORTED_MODULE_2__","hideRewards","hideDetailsLink","_components_layout__WEBPACK_IMPORTED_MODULE_3__","numberFormat","Intl","NumberFormat","style","currency","commitFormat","DateTimeFormat","year","month","App","earnings","format","lifetimeEarnings","lastUpdate","openSourceUrl","lastCommitDate","Date","parse","fields","lastCommit","isNaN","Fragment","href","appcoid","website"],"mappings":"iLAgCaA,EAAK,YAuBHC,UAlDD,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACTC,EAAcD,EAAKE,UAAUC,MAChCC,OAAO,SAASC,GAIf,OAA4B,IAHVL,EAAKM,UAAUH,MAAMC,OACrC,SAAAG,GAAC,OAAIA,EAAEC,KAAKC,OAASJ,EAAEG,KAAKC,OAEbC,SAElBC,IAAI,SAACN,EAAGO,GACP,OACEC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,GACPC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKjB,KAAMK,EAAEG,KAAMU,aAAW,EAACC,iBAAe,OAKtD,OACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BAAmBd,EAAYS,SAEjCG,EAAAC,EAAAC,cAAA,UAAKd,iGCxBEoB,EAAe,IAAIC,KAAKC,aAAa,QAAS,CACzDC,MAAO,WACPC,SAAU,QAECC,EAAe,IAAIJ,KAAKK,eAAe,QAAS,CAC3DC,KAAM,UACNC,MAAO,SAyDMC,IAvDH,SAAA/B,GAA4C,IAAzCC,EAAyCD,EAAzCC,KAAMkB,EAAmCnB,EAAnCmB,YAAaC,EAAsBpB,EAAtBoB,gBAC1BY,EAAWV,EAAaW,OAAOhC,EAAKiC,kBACtCC,EAAa,GACjB,GAAIlC,EAAKmC,cAAe,CACtB,IAAMC,EAAiBC,KAAKC,MAAMtC,EAAKuC,OAAOC,YAE5CN,EADEO,MAAML,GACKpC,EAAKuC,OAAOC,WAEZd,EAAaM,OAAOI,GAIrC,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,MACIvB,GAAmBN,EAAAC,EAAAC,cAAA,KAAG4B,KAAI,UAAY3C,EAAK4C,SAAY5C,EAAKS,MAC7DU,GAAmBN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KAAG1C,EAAKS,MAC3BT,EAAKmC,eACJtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACG,IADH,IAEG7B,EAAAC,EAAAC,cAAA,KAAG4B,KAAM3C,EAAKmC,eAAgBnC,EAAKmC,eAFtC,MAKAjB,GACAL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACE7B,EAAAC,EAAAC,cAAA,WADF,YAEYgB,EAAU,KAGvB/B,EAAKmC,eACJtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACE7B,EAAAC,EAAAC,cAAA,WADF,gBAEgBmB,GAGlBrB,EAAAC,EAAAC,cAAA,WACCf,EAAK6C,SAAW7C,EAAK6C,QAAQnC,OAAS,GACrCG,EAAAC,EAAAC,cAAA,KAAG4B,KAAM3C,EAAK6C,SAAd","file":"component---src-pages-2019-01-appco-out-js-4f3eb4bc58504039f9cb.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport App from '../../components/app'\nimport Layout from '../../components/layout'\n\nconst AppCo = ({ data }) => {\n  const retiredApps = data.lastmonth.edges\n    .filter(function(d) {\n      const appcodata = data.thismonth.edges.filter(\n        e => e.node.name === d.node.name\n      )\n      return appcodata.length === 0\n    })\n    .map((d, idx) => {\n      return (\n        <li key={idx}>\n          <App data={d.node} hideRewards hideDetailsLink/>\n        </li>\n      )\n    })\n\n  return (\n    <Layout>\n      <h1>Retired Blockstack Apps (January 2019)</h1>\n      <ul>\n        <li>Total number: {retiredApps.length}</li>\n      </ul>\n      <ul>{retiredApps}</ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query out201901 {\n    lastmonth:allAppminingresultsXlsxDecember2018 {\n      totalCount\n      edges {\n        node {\n          name: App_Name\n          Final_Score\n        }\n      }\n    }\n    thismonth:allAppminingresultsXlsxJanuary2019 {\n      edges {\n        node {\n          appcoid: App_Id\n          name: App_Name\n          Final_Score\n        }\n      }\n    }\n  }\n`\n\nexport default AppCo\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nexport const numberFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n})\nexport const commitFormat = new Intl.DateTimeFormat('en-US', {\n  year: 'numeric',\n  month: 'long',\n})\nconst App = ({ data, hideRewards, hideDetailsLink }) => {\n  const earnings = numberFormat.format(data.lifetimeEarnings)\n  var lastUpdate = ''\n  if (data.openSourceUrl) {\n    const lastCommitDate = Date.parse(data.fields.lastCommit)\n    if (isNaN(lastCommitDate)) {\n      lastUpdate = data.fields.lastCommit\n    } else {\n      lastUpdate = commitFormat.format(lastCommitDate)\n    }\n  }\n\n  return (\n    <>\n      {!hideDetailsLink && <a href={`/appco/${data.appcoid}`}>{data.name}</a>}\n      {hideDetailsLink && <>{data.name}</>}\n      {data.openSourceUrl && (\n        <>\n          {' '}\n          (<a href={data.openSourceUrl}>{data.openSourceUrl}</a>)\n        </>\n      )}\n      {!hideRewards && (\n        <>\n          <br />\n          rewards: {earnings}{' '}\n        </>\n      )}\n      {data.openSourceUrl && (\n        <>\n          <br />\n          last update: {lastUpdate}\n        </>\n      )}\n      <br />\n      {data.website && data.website.length > 0 && (\n        <a href={data.website}>Launch app</a>\n      )}\n    </>\n  )\n}\n\nexport const query = graphql`\n  fragment AppInformation on apps {\n    appcoid: id__normalized\n    name\n    website\n    lifetimeEarnings\n    openSourceUrl\n    fields {\n      lastCommit\n    }\n  }\n`\n\nexport default App\n"],"sourceRoot":""}