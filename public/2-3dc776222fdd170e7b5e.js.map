{"version":3,"sources":["webpack:///./src/components/search.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Search","props","_this","_Component","call","this","getOrCreateIndex","index","Index","load","searchIndex","search","evt","query","target","value","setState","results","expand","map","_ref","ref","documentStore","getDoc","state","render","react_default","a","createElement","type","onChange","placeholder","page","key","id","gatsby_browser_entry","to","appcoid","style","color","fontWeight","textDecoration","name","category","description","Component","Header","siteTitle","siteDescription","siteSearchIndex","background","marginBottom","margin","maxWidth","padding","search_Search","propTypes","PropTypes","string","defaultProps","Layout","children","data","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_2239313339","node","isRequired","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Consumer","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname"],"mappings":"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","file":"2-3dc776222fdd170e7b5e.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Index } from \"elasticlunr\"\nimport { Link } from 'gatsby'\n\n// Search component\nexport default class Search extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: ``,\n      results: [],\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" value={this.state.query} onChange={this.search} placeholder=\"Search apps by name, ..\" />\n        <ul>\n          {this.state.results.map(page => (\n            <li key={page.id}>\n              <Link to={\"/appco/\" + page.appcoid}\n              style={{\n                color: `white`,\n                fontWeight: 'bold',\n                textDecoration: `none`,\n              }}\n              >{page.name}</Link>\n              {\": \" + page.category} {\" : \" + page.description}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n  getOrCreateIndex = () =>\n    this.index\n      ? this.index\n      : // Create an elastic lunr index and hydrate with graphql query results\n        Index.load(this.props.searchIndex)\n\n  search = evt => {\n    const query = evt.target.value\n    this.index = this.getOrCreateIndex()\n    this.setState({\n      query,\n      // Query the index with search string to get an [] of IDs\n      results: this.index\n        .search(query, {expand:true})\n        // Map over each ID and return the full document\n        .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n    })\n  }\n}","import { StaticQuery, Link, graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Search from './search'\nconst Header = ({ siteTitle, siteDescription, siteSearchIndex }) => (\n  <div\n    style={{\n      background: `#3f51b5`,\n      marginBottom: `1.45rem`,\n      color: `white`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      {siteDescription}\n      <Search searchIndex={siteSearchIndex.index} />\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  siteDescription: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteHeaderQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        siteSearchIndex {\n          index\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          siteTitle={data.site.siteMetadata.title}\n          siteDescription={data.site.siteMetadata.description}\n          siteSearchIndex={data.siteSearchIndex}\n        />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a> and{' '}\n            <a href=\"https://blockstack.org\">Blockstack</a>. You can{' '}\n            <a href=\"https://gitlab.com/friedger/app-center\">\n              view the source here\n            </a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}